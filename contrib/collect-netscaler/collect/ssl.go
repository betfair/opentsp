// Copyright 2014 The Sporting Exchange Limited. All rights reserved.
// Use of this source code is governed by a free license that can be
// found in the LICENSE file.

package collect

import (
	"opentsp.org/contrib/collect-netscaler/nitro"
)

func init() {
	registerStatFunc("ssl", ssl)
}

func ssl(emit emitFn, r *nitro.ResponseStat) {
	x := r.SSL

	// Global gauges.
	emit("ssl.NewSessionsRate", x.NewSessionsRate)
	emit("ssl.SessionCacheRate type=Hits", x.SessionHitsRate)
	emit("ssl.SessionCacheRate type=Miss", x.SessionMissRate)
	emit("ssl.RenegSessionsRate protocol=SSLv3", x.SSLv3RenegSessionsRate)
	emit("ssl.RenegSessionsRate protocol=TLSv1", x.TLSv1RenegSessionsRate)
	emit("ssl.RenegSessionsRate protocol=TLSv11", x.TLSv11RenegSessionsRate)
	emit("ssl.RenegSessionsRate protocol=TLSv12", x.TLSv12RenegSessionsRate)
	emit("ssl.OffloadKeyExchangesRate algorithm=RSA", x.OffloadRSAKeyExchangesRate)
	emit("ssl.OffloadKeyExchangesRate algorithm=DH", x.OffloadDHKeyExchangesRate)
	emit("ssl.OffloadSignRate algorithm=RSA", x.OffloadSignRSARate)
	emit("ssl.OffloadBulkRate algorithm=RC4", x.OffloadBulkRC4Rate)
	emit("ssl.OffloadBulkRate algorithm=DES", x.OffloadBulkDESRate)
	emit("ssl.OffloadBulkRate algorithm=AES", x.OffloadBulkAESRate)

	// Client-side gauges.
	emit("ssl.SessionsRate side=Client protocol=SSLv2", x.ClientSSLv2SessionsRate)
	emit("ssl.SessionsRate side=Client protocol=SSLv3", x.ClientSSLv3SessionsRate)
	emit("ssl.SessionsRate side=Client protocol=TLSv1", x.ClientTLSv1SessionsRate)
	emit("ssl.SessionsRate side=Client protocol=TLSv11", x.ClientTLSv11SessionsRate)
	emit("ssl.SessionsRate side=Client protocol=TLSv12", x.ClientTLSv12SessionsRate)
	emit("ssl.TransactionsRate side=Client protocol=SSLv2", x.ClientSSLv2TransactionsRate)
	emit("ssl.TransactionsRate side=Client protocol=SSLv3", x.ClientSSLv3TransactionsRate)
	emit("ssl.TransactionsRate side=Client protocol=TLSv1", x.ClientTLSv1TransactionsRate)
	emit("ssl.TransactionsRate side=Client protocol=TLSv11", x.ClientTLSv11TransactionsRate)
	emit("ssl.TransactionsRate side=Client protocol=TLSv12", x.ClientTLSv12TransactionsRate)
	emit("ssl.EncRate side=Client type=Hardware", x.ClientHWEncFERate)
	emit("ssl.EncRate side=Client type=Software", x.ClientSWEncFERate)
	emit("ssl.DecRate side=Client type=Hardware", x.ClientHWDecFERate)
	emit("ssl.DecRate side=Client type=Software", x.ClientSWDecFERate)
	emit("ssl.KeyExchangesRate side=Client algorithm=RSA512", x.ClientRSA512KeyExchangesRate)
	emit("ssl.KeyExchangesRate side=Client algorithm=RSA1024", x.ClientRSA1024KeyExchangesRate)
	emit("ssl.KeyExchangesRate side=Client algorithm=RSA2048", x.ClientRSA2048KeyExchangesRate)
	emit("ssl.KeyExchangesRate side=Client algorithm=RSA4096", x.ClientRSA4096KeyExchangesRate)
	emit("ssl.KeyExchangesRate side=Client algorithm=DH512", x.ClientDH512KeyExchangesRate)
	emit("ssl.KeyExchangesRate side=Client algorithm=DH1024", x.ClientDH1024KeyExchangesRate)
	emit("ssl.KeyExchangesRate side=Client algorithm=DH2048", x.ClientDH2048KeyExchangesRate)
	emit("ssl.CiphersRate side=Client algorithm=40BitRC4", x.Client40BitRC4CiphersRate)
	emit("ssl.CiphersRate side=Client algorithm=56BitRC4", x.Client56BitRC4CiphersRate)
	emit("ssl.CiphersRate side=Client algorithm=64BitRC4", x.Client64BitRC4CiphersRate)
	emit("ssl.CiphersRate side=Client algorithm=128BitRC4", x.Client128BitRC4CiphersRate)
	emit("ssl.CiphersRate side=Client algorithm=40BitDES", x.Client40BitDESCiphersRate)
	emit("ssl.CiphersRate side=Client algorithm=56BitDES", x.Client56BitDESCiphersRate)
	emit("ssl.CiphersRate side=Client algorithm=168Bit3DES", x.Client168Bit3DESCiphersRate)
	emit("ssl.CiphersRate side=Client algorithm=AES128", x.ClientCipherAES128Rate)
	emit("ssl.CiphersRate side=Client algorithm=AES256", x.ClientCipherAES256Rate)
	emit("ssl.CiphersRate side=Client algorithm=40BitRC2", x.Client40BitRC2CiphersRate)
	emit("ssl.CiphersRate side=Client algorithm=56BitRC2", x.Client56BitRC2CiphersRate)
	emit("ssl.CiphersRate side=Client algorithm=128BitRC2", x.Client128BitRC2CiphersRate)
	emit("ssl.CiphersRate side=Client algorithm=NULL", x.ClientNULLCiphersRate)
	emit("ssl.CiphersRate side=Client algorithm=128BitIDEA", x.Client128BitIDEACiphersRate)
	emit("ssl.MacRate side=Client algorithm=MD5", x.ClientMD5MacRate)
	emit("ssl.MacRate side=Client algorithm=SHA", x.ClientSHAMacRate)
	emit("ssl.HandshakesRate side=Client protocol=SSLv2", x.ClientSSLv2HandshakesRate)
	emit("ssl.HandshakesRate side=Client protocol=SSLv3", x.ClientSSLv3HandshakesRate)
	emit("ssl.HandshakesRate side=Client protocol=TLSv1", x.ClientTLSv1HandshakesRate)
	emit("ssl.HandshakesRate side=Client protocol=TLSv11", x.ClientTLSv11HandshakesRate)
	emit("ssl.HandshakesRate side=Client protocol=TLSv12", x.ClientTLSv12HandshakesRate)
	emit("ssl.AuthenticationsRate side=Client protocol=SSLv2Client", x.ClientSSLv2ClientAuthenticationsRate)
	emit("ssl.AuthenticationsRate side=Client protocol=SSLv3Client", x.ClientSSLv3ClientAuthenticationsRate)
	emit("ssl.AuthenticationsRate side=Client protocol=TLSv1Client", x.ClientTLSv1ClientAuthenticationsRate)
	emit("ssl.AuthenticationsRate side=Client protocol=TLSv11Client", x.ClientTLSv11ClientAuthenticationsRate)
	emit("ssl.AuthenticationsRate side=Client protocol=TLSv12Client", x.ClientTLSv12ClientAuthenticationsRate)
	emit("ssl.AuthorizationsRate side=Client algorithm=RSA", x.ClientRSAAuthorizationsRate)
	emit("ssl.AuthorizationsRate side=Client algorithm=DH", x.ClientDHAuthorizationsRate)
	emit("ssl.AuthorizationsRate side=Client algorithm=DSS", x.ClientDSSAuthorizationsRate)
	emit("ssl.AuthorizationsRate side=Client algorithm=NULL", x.ClientNULLAuthorizationsRate)

	// Server-side gauges.
	emit("ssl.SessionsRate side=Server protocol=SSLv3", x.ServerSSLv3SessionsRate)
	emit("ssl.SessionsRate side=Server protocol=TLSv1", x.ServerTLSv1SessionsRate)
	emit("ssl.SessionsRate side=Server protocol=TLSv11", x.ServerTLSv11SessionsRate)
	emit("ssl.SessionsRate side=Server protocol=TLSv12", x.ServerTLSv12SessionsRate)
	emit("ssl.SessionMultiplexAttemptRate side=Server result=Success", x.ServerSessionMultiplexAttemptSuccessRate)
	emit("ssl.SessionMultiplexAttemptRate side=Server result=Fails", x.ServerSessionMultiplexAttemptFailsRate)
	emit("ssl.KeyExchangesRate side=Server algorithm=RSA512", x.ServerRSA512KeyExchangesRate)
	emit("ssl.KeyExchangesRate side=Server algorithm=RSA1024", x.ServerRSA1024KeyExchangesRate)
	emit("ssl.KeyExchangesRate side=Server algorithm=RSA2048", x.ServerRSA2048KeyExchangesRate)
	emit("ssl.KeyExchangesRate side=Server algorithm=RSA4096", x.ServerRSA4096KeyExchangesRate)
	emit("ssl.KeyExchangesRate side=Server algorithm=DH512", x.ServerDH512KeyExchangesRate)
	emit("ssl.KeyExchangesRate side=Server algorithm=DH1024", x.ServerDH1024KeyExchangesRate)
	emit("ssl.KeyExchangesRate side=Server algorithm=DH2048", x.ServerDH2048KeyExchangesRate)
	emit("ssl.CiphersRate side=Server algorithm=40BitRC4", x.Server40BitRC4CiphersRate)
	emit("ssl.CiphersRate side=Server algorithm=56BitRC4", x.Server56BitRC4CiphersRate)
	emit("ssl.CiphersRate side=Server algorithm=64BitRC4", x.Server64BitRC4CiphersRate)
	emit("ssl.CiphersRate side=Server algorithm=128BitRC4", x.Server128BitRC4CiphersRate)
	emit("ssl.CiphersRate side=Server algorithm=40BitDES", x.Server40BitDESCiphersRate)
	emit("ssl.CiphersRate side=Server algorithm=56BitDES", x.Server56BitDESCiphersRate)
	emit("ssl.CiphersRate side=Server algorithm=168Bit3DES", x.Server168Bit3DESCiphersRate)
	emit("ssl.CiphersRate side=Server algorithm=AES128", x.ServerCipherAES128Rate)
	emit("ssl.CiphersRate side=Server algorithm=AES256", x.ServerCipherAES256Rate)
	emit("ssl.CiphersRate side=Server algorithm=40BitRC2", x.Server40BitRC2CiphersRate)
	emit("ssl.CiphersRate side=Server algorithm=56BitRC2", x.Server56BitRC2CiphersRate)
	emit("ssl.CiphersRate side=Server algorithm=128BitRC2", x.Server128BitRC2CiphersRate)
	emit("ssl.CiphersRate side=Server algorithm=NULL", x.ServerNULLCiphersRate)
	emit("ssl.CiphersRate side=Server algorithm=128BitIDEA", x.Server128BitIDEACiphersRate)
	emit("ssl.MacRate side=Server algorithm=MD5", x.ServerMD5MacRate)
	emit("ssl.MacRate side=Server algorithm=SHA", x.ServerSHAMacRate)
	emit("ssl.HandshakesRate side=Server protocol=SSLv3", x.ServerSSLv3HandshakesRate)
	emit("ssl.HandshakesRate side=Server protocol=TLSv1", x.ServerTLSv1HandshakesRate)
	emit("ssl.HandshakesRate side=Server protocol=TLSv11", x.ServerTLSv11HandshakesRate)
	emit("ssl.HandshakesRate side=Server protocol=TLSv12", x.ServerTLSv12HandshakesRate)
	emit("ssl.AuthenticationsRate side=Server protocol=SSLv3", x.ServerSSLv3ClientAuthenticationsRate)
	emit("ssl.AuthenticationsRate side=Server protocol=TLSv1", x.ServerTLSv1ClientAuthenticationsRate)
	emit("ssl.AuthenticationsRate side=Server protocol=TLSv11", x.ServerTLSv11ClientAuthenticationsRate)
	emit("ssl.AuthenticationsRate side=Server protocol=TLSv12", x.ServerTLSv12ClientAuthenticationsRate)
	emit("ssl.AuthorizationsRate side=Server algorithm=RSA", x.ServerRSAAuthorizationsRate)
	emit("ssl.AuthorizationsRate side=Server algorithm=DH", x.ServerDHAuthorizationsRate)
	emit("ssl.AuthorizationsRate side=Server algorithm=DSS", x.ServerDSSAuthorizationsRate)
	emit("ssl.AuthorizationsRate side=Server algorithm=NULL", x.ServerNULLAuthorizationsRate)
	emit("ssl.MultiplexedSessionsRate side=Server", x.ServerMultiplexedSessionsRate)
	emit("ssl.EncRate side=Server type=Hardware", x.ServerHWEncBERate)
	emit("ssl.EncRate side=Server type=Software", x.ServerSWEncBERate)
	emit("ssl.DecRate side=Server type=Hardware", x.ServerHWDecBERate)
	emit("ssl.DecRate side=Server type=Software", x.ServerSWDecBERate)
}
